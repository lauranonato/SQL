#quantos pedidos sao realizados na semana?
select
  count(distinct id) as num_pedidos, #funç de agregaçao contagem de pedidos (id) por dia da semana
  extract(dayofweek from created_at) as dia_da_semana
from e_commerce.orders
group by dia_da_semana
order by num_pedidos desc;

#dias da semana
select
  count(distinct id) as num_pedidos, #funç de agregaçao contagem de pedidos (id) por dia da semana (numerico e texto), o por vai no group by 
  extract(dayofweek from created_at) as dia_da_semana,
  case
    when extract(dayofweek from created_at) = 1 then 'domingo'
    when extract(dayofweek from created_at) = 2 then 'segunda'
    when extract(dayofweek from created_at) = 3 then 'terça'
    when extract(dayofweek from created_at) = 4 then 'quarta'
    when extract(dayofweek from created_at) = 5 then 'quinta'
    when extract(dayofweek from created_at) = 6 then 'sexta'
    when extract(dayofweek from created_at) = 7 then 'sabado'
  end as dia_semana 
from e_commerce.orders
group by dia_da_semana, dia_semana
order by num_pedidos desc;

selecionando um intervalo de data
#o campo 'date' é do tipo timestamp, entao foi necessario transformar em date(date)
select * from `bigquery-public-data`.covid19_italy.data_by_region
where date(date) between date(2020,07,05) and date_add(date(2020,07,05),interval 3 day);

clientes que se cadastraram na ultima semana #publi
select 
  *
from e_commerce.orders
where date(created_at) between date_sub(date(2020,08,20),interval 365 day) and current_date;

#media de preço em 1 ano
select 
  round(avg(price),2)
from e_commerce.products p
join e_commerce.orders o on p.id = o.id
where date(created_at) between date_sub(date(2020,08,20), interval 3 month) and current_date;

#diferença entre duas datas por date part parametro (dias, meses, anos)
select 
  date_diff('2021-09-04','2021-08-23', day) as dias,
  datetime_diff('2021-09-04T17:00:00','2021-08-23T14:00:00',hour) as dif_horas;
  
#diferença entre o cadastro do cliente e a primeira compra
select
  c.id,
  min(timestamp_diff(o.created_at,c.created_at,day)) as dias_primeira_compra #minimo, pois quero a 1 compra 
from e_commerce.customers c
join e_commerce.orders o on c.id = o.customer_id
group by c.id;